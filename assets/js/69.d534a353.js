(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{426:function(v,_,t){"use strict";t.r(_);var p=t(8),a=Object(p.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h3",{attrs:{id:"三阶段提交协议-3pc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三阶段提交协议-3pc"}},[v._v("#")]),v._v(" 三阶段提交协议（3PC）")]),v._v(" "),_("p",[v._v("三阶段提交协议出现的背景：一致性协议中设计出了二阶段提交协议，但是2PC设计存在缺陷，于是有了三阶段提交协议。")]),v._v(" "),_("h4",{attrs:{id:"三阶段提交协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三阶段提交协议"}},[v._v("#")]),v._v(" 三阶段提交协议")]),v._v(" "),_("p",[v._v("3PC，全称为“Three phase  commit”，是2PC的改进版，将2PC的“事务提交过程”一分为二，并形成了canCommit、preCommit和doCommit三个阶段组成的事务处理协议。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/terwer/upload/img/image-20220320223801310.png",alt:"image-20220320223801310"}})]),v._v(" "),_("p",[v._v("三阶段提交升级点（基于二阶段）：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("三阶段提交协议引入了超时机制")])]),v._v(" "),_("li",[_("p",[v._v("在第一阶段和第二阶段中，引入了一个准备阶段。保证最后提交之前，各个节点之间数据一致性。")]),v._v(" "),_("p",[v._v("简单地说：除了引入超时机制外，3PC把2PC的准备阶段再次一分为二，这样三阶段提交就有，CanCommit、")]),v._v(" "),_("p",[v._v("preCommit、doCommit三个阶段。")])])]),v._v(" "),_("h4",{attrs:{id:"三阶段详解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三阶段详解"}},[v._v("#")]),v._v(" 三阶段详解")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("第一阶段（canCommit）")]),v._v(" "),_("p",[v._v("类似于2PC的准备阶段（preCommit）。")]),v._v(" "),_("p",[v._v("协调者向参与者发送Commit请求，参与者如果可以提交就发生yes响应，否则返回No响应。")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("事务询问")]),v._v(" "),_("p",[v._v("协调者向参与者发送canCommit请求。询问是否可以进行事务提交操作，然后开始等待参与者的响应。")])]),v._v(" "),_("li",[_("p",[v._v("响应反馈")]),v._v(" "),_("p",[v._v("参与者接收到canCommit请求之后，正常情况下，如果自身可以执行事务，则返回Yes响应，并进入预备状态。否则反馈No")])])])]),v._v(" "),_("li",[_("p",[v._v("第二阶段（preCommit）")]),v._v(" "),_("p",[v._v("协调者根据参与者的反应情况，来决定是否可以执行事务的preCommit操作。根据响应情况，有以下两种可能：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("Yes")]),v._v(" "),_("p",[v._v("（1）发送预提交请求")]),v._v(" "),_("p",[v._v("协调者向参与者发送preCommit请求，并进入prepared阶段。")]),v._v(" "),_("p",[v._v("（2）事务预提交")]),v._v(" "),_("p",[v._v("参与者接收到preCommit请求之后，会执行事务操作，并将undo信息和redo信息记录到事务日志中。")]),v._v(" "),_("p",[v._v("（3）响应反馈")]),v._v(" "),_("p",[v._v("如果参与者成功执行了事务操作，则返回ACK响应，并且开始等待最终指令。")])]),v._v(" "),_("li",[_("p",[v._v("No")]),v._v(" "),_("p",[v._v("假设任何一个向协调者发送了No响应，或者等待超时之后，协调者都没有接收到参与者的响应，那么就执行事务的中断。")]),v._v(" "),_("p",[v._v("（1）发送中断请求")]),v._v(" "),_("p",[v._v("协调者向参与者发送abort请求")]),v._v(" "),_("p",[v._v("（2）中断事务")]),v._v(" "),_("p",[v._v("参与者收到来着协调者的abort请求之后（或者超时仍未收到协调者的请求），执行事务的中断")])])])]),v._v(" "),_("li",[_("p",[v._v("第三阶段（doCommit）")]),v._v(" "),_("p",[v._v("该阶段进行真正的事务提交，也可以分为执行事务和中断事务两种情况")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("执行成功")]),v._v(" "),_("p",[v._v("（1）发送提交请求")]),v._v(" "),_("p",[v._v("协调者接收到参与者发送的ACK响应，那么它从预提交状态进入到提交状态。并向所有参与者发送doCommit请求。")]),v._v(" "),_("p",[v._v("（2）事务提交")]),v._v(" "),_("p",[v._v("参与者接收到doCommit请求之后，执行正式的事务提交。并在完成事务提交之后释放所有的事务资源。")]),v._v(" "),_("p",[v._v("（3）响应反馈")]),v._v(" "),_("p",[v._v("事务提交完之后，向协调者发送ACK响应。")]),v._v(" "),_("p",[v._v("（4）完成事务")]),v._v(" "),_("p",[v._v("协调者接收到所有参与者的ACK响应之后，完成事务。")])]),v._v(" "),_("li",[_("p",[v._v("中断事务")]),v._v(" "),_("p",[v._v("（1）发送中断请求")]),v._v(" "),_("p",[v._v("协调者向所有参与者发送abort请求")]),v._v(" "),_("p",[v._v("（2）事务回滚")]),v._v(" "),_("p",[v._v("参与者接收到abort请求之后，利用在阶段二记录的undo信息来执行事务的回滚操作，并在完成回滚之后释放所有的事务资源。")]),v._v(" "),_("p",[v._v("（3）反馈结果")]),v._v(" "),_("p",[v._v("参与者完成事务回滚之后，想协调者发送ACK消息")]),v._v(" "),_("p",[v._v("（4）中断事务")]),v._v(" "),_("p",[v._v("协调者接收到所有参与者的ACk消息之后，进行事务的中断")]),v._v(" "),_("p",[v._v("一旦进入阶段三，可能会有两种故障")]),v._v(" "),_("p",[v._v("（1）协调者出现问题")]),v._v(" "),_("p",[v._v("（2）协调者和参与者之间的网络故障")])])])])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/terwer/upload/img/image-20220327152939588.png",alt:"image-20220327152939588"}})]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[v._v("如果出现了任何一种情况，都可能出现参与者无法收到doCommit请求或者abort请求，参与者都会在等待超时之后进行事务提交。\n")])])]),_("h4",{attrs:{id:"_3pc和2pc对比"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3pc和2pc对比"}},[v._v("#")]),v._v(" 3PC和2PC对比")]),v._v(" "),_("p",[v._v("对于协调者和参与者都设置了超时协议（在2PC中，只有协调者有超时机制，如果在一定时间内没有收到参与者的消息默认失败）。主要避免了参与者长时间无法与协调者节点通讯的情况下（或者协调者挂掉），无法释放资源的问题。因为参与者自身有超时机制，会在超时后，自动进行本地commit而释放资源。这种机制从侧面降低了整个事务的阻塞时间和范围。")]),v._v(" "),_("p",[v._v("通过canCommit、preCommit、doCommit三个阶段设计，相对于2PC而言，多设置了一个缓冲阶段，保证了最后提交阶段之前各个参与节点的状态一致。")]),v._v(" "),_("p",[v._v("preCommit是一个缓冲，保证了最后提交节点之前，各个节点的状态是一致的。")]),v._v(" "),_("p",[_("strong",[v._v("3PC没有完全解决数据一致性的问题。")])])])}),[],!1,null,null,null);_.default=a.exports}}]);