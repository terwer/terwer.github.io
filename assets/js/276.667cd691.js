(window.webpackJsonp=window.webpackJsonp||[]).push([[276],{630:function(t,o,e){"use strict";e.r(o);var i=e(8),r=Object(i.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"分布式架构阅读目录"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#分布式架构阅读目录"}},[t._v("#")]),t._v(" 分布式架构阅读目录")]),t._v(" "),o("h2",{attrs:{id:"_1-rpc架构设计"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-rpc架构设计"}},[t._v("#")]),t._v(" 1. RPC架构设计")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/post/rpc-architecture-design.html"}},[t._v("RPC架构设计及IO模型")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/introduction-to-nio-programming.html"}},[t._v("NIO编程及其三大核心原理")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/buffer-of-nio-three-cores.html"}},[t._v("NIO三大核心之缓冲区（Buffer）")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/channel-of-nio-three-cores.html"}},[t._v(" NIO三大核心之通道（Channel）")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/selector-of-nio-three-cores.html"}},[t._v("NIO三大核心之选择器（Selector）")])],1)]),t._v(" "),o("h2",{attrs:{id:"_2-深入浅出netty及源码分析"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-深入浅出netty及源码分析"}},[t._v("#")]),t._v(" 2. 深入浅出netty及源码分析")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/post/netty-core-principles.html"}},[t._v("Netty核心原理")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/thread-model-and-traditional-io-blocking-model.html"}},[t._v("线程模型以及传统IO阻塞模型")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/reactor-io-model.html"}},[t._v("Reactor模型")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/netty-threading-model.html"}},[t._v("Netty线程模型")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/introduction-to-netty-core-api.html"}},[t._v("Netty核心API介绍")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/introduction-to-netty-and-asynchronous-model.html"}},[t._v("Netty入门与异步模型")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/netty-codec.html"}},[t._v("Netty高级进阶之Netty编解码器")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/develop-web-chat-room-based-on-netty-websocket.html"}},[t._v("Netty高级进阶之基于Netty的群聊天室案例")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/http-server-development-based-on-netty.html"}},[t._v("Netty高级进阶之基于Netty的HTTP服务器开发")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/develop-web-chat-room-with-netty-websocket.html"}},[t._v("Netty高级进阶之基于Netty的Websocket开发网页聊天室")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/solution-of-sticking-and-unpacking-in-netty.html"}},[t._v("Netty高级进阶之Netty中的粘包和拆包的解决方案")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/nety-source-code-analysis.html"}},[t._v("Nety源码剖析")])],1)]),t._v(" "),o("h2",{attrs:{id:"_3-自定义rpc框架"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-自定义rpc框架"}},[t._v("#")]),t._v(" 3. 自定义RPC框架")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/post/distributed-architecture-network-communication-theory-of-custom-rpc-framework.html"}},[t._v("自定义RPC框架之分布式架构网络通信理论")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/implementation-of-custom-rpc-framework-based-on-netty.html"}},[t._v("自定义RPC框架之基于Netty实现RPC框架")])],1)]),t._v(" "),o("h2",{attrs:{id:"_4-分布式架构理论"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_4-分布式架构理论"}},[t._v("#")]),t._v(" 4. 分布式架构理论")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/post/rpc-introduction.html"}},[t._v("分布式架构理论")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/data-consistency.html"}},[t._v("分布式理论之数据一致性")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/cap-theorem.html"}},[t._v("分布式理论之CAP定理")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/base-theorem.html"}},[t._v("分布式理论之BASE定理")])],1)]),t._v(" "),o("h2",{attrs:{id:"_5-分布式一致性协议"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-分布式一致性协议"}},[t._v("#")]),t._v(" 5. 分布式一致性协议")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/post/two-phase-commit-protocol-of-distributed-consistency-protocol.html"}},[t._v("分布式一致性协议之两阶段提交协议（2PC）")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/three-phase-commit-protocol-of-distributed-consistency-protocol.html"}},[t._v("分布式一致性协议之三阶段提交协议（3PC）")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/nwr-protocol-of-distributed-consistency-protocol.html"}},[t._v("分布式一致性协议之NWR协议")])],1),t._v(" "),o("li",[o("a",{attrs:{href:"http://localhost:8080/post/mission-protocol-of-distributed-consistency-protocol.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("分布式一致性协议之Gossip协议"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/paxos-protocol-of-distributed-consistency-protocol.html"}},[t._v("分布式一致性协议之Paxos协议")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/raft-protocol-of-distributed-consistency-protocol.html"}},[t._v("分布式一致性协议之Raft协议")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/lease-mechanism-of-distributed-consistency-protocol.html"}},[t._v("分布式一致性协议之Lease机制")])],1)]),t._v(" "),o("h2",{attrs:{id:"_6-分布式系统设计策略"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_6-分布式系统设计策略"}},[t._v("#")]),t._v(" 6. 分布式系统设计策略")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/post/heartbeat-detection-of-distributed-system-design-strategy.html"}},[t._v("分布式系统设计策略之心跳检测")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/high-availability-of-distributed-system-design-strategy.html"}},[t._v("分布式系统设计策略之高可用")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/fault-tolerance-of-distributed-system-design-strategy.html"}},[t._v("分布式系统设计策略之容错性")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/load-balancing-of-distributed-system-design-strategy.html"}},[t._v("分布式系统设计策略之负载均衡")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/distributed-architecture-service-invocation.html"}},[t._v("分布式架构服务调用")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/service-coordination-and-distributed-locking-in-distributed-service-governance.html"}},[t._v("分布式服务治理之服务协调")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/service-peak-shaving-in-distributed-service-governance.html"}},[t._v("分布式服务治理之服务削峰")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/service-degradation-of-distributed-service-governance.html"}},[t._v("分布式服务治理之服务降级")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/service-flow-limitation-of-distributed-service-governance.html"}},[t._v("分布式服务治理之服务限流")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/service-fusing-in-distributed-service-governance.html"}},[t._v("分布式服务治理之服务熔断")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/service-link-tracking-for-distributed-service-governance.html"}},[t._v("分布式服务治理之服务链路追踪")])],1)]),t._v(" "),o("h2",{attrs:{id:"_7-架构设计基本原则"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_7-架构设计基本原则"}},[t._v("#")]),t._v(" 7. 架构设计基本原则")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/post/opening-and-closing-principles-of-basic-principles-of-architecture-design.html"}},[t._v("架构设计基本原则之开闭原则（OCP）")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/single-responsibility-principle-of-basic-principles-of-architecture-design.html"}},[t._v("架构设计基本原则之单一职责原则（SRP）")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/interface-isolation-principle-of-basic-principles-of-architecture-design.html"}},[t._v("架构设计基本原则之接口隔离原则（ISP）")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/internal-replacement-principle-of-basic-principles-of-architecture-design.html"}},[t._v("架构设计基本原则之里式替换原则（LSP）")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/dependency-inversion-principle-of-basic-principles-of-architecture-design.html"}},[t._v("架构设计基本原则之依赖倒置原则（DIP）")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/post/basic-principles-of-architecture-design-and-knowledge-expansion.html"}},[t._v("架构设计基本原则知识扩展")])],1)]),t._v(" "),o("h2",{attrs:{id:"_8-分布式理论总结"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_8-分布式理论总结"}},[t._v("#")]),t._v(" 8. 分布式理论总结")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/post/summary-and-expansion-of-distributed-knowledge.html"}},[t._v("分布式架构知识拓展与总结")])],1)])])}),[],!1,null,null,null);o.default=r.exports}}]);