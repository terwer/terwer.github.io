(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{377:function(t,a,v){"use strict";v.r(a);var s=v(8),_=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"java-se-第五讲-运算符续"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-se-第五讲-运算符续"}},[t._v("#")]),t._v(" Java SE 第五讲：运算符续")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("文章更新历史")]),t._v(" "),a("p",[t._v("2022/05/08 fix:修改备注。")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("关系运算符：大于（>）、小于（<）、等于（==）、不等于（!=）、大于等于（>=）、小于等 于（<=），关系运算的结果是个 boolean 值。")])]),t._v(" "),a("li",[a("p",[t._v("逻辑运算符：重点讲解两个，逻辑运算符本身也返回一个 boolean 值。")]),t._v(" "),a("p",[t._v("1） 逻辑与：使用&&表示， 逻辑与是个双目运算符（即有两个操作数的运算符），只有 当两个操作数都为真的时候，结果才为真；其余情况结果均为假。 逻辑与表示的并 且的意思。")]),t._v(" "),a("p",[t._v("2） 逻辑或：使用||表示，逻辑或也是个双目运算符，只有当两个操作数都为假的时候， 结果才为假；其余情况结果均为真。 逻辑或表示或者的意思。")])]),t._v(" "),a("li",[a("p",[t._v("关于逻辑运算符的短路特性。")]),t._v(" "),a("p",[t._v("1） 逻辑与： 如果第一个操作数为 false，那么结果肯定就是 false ，所以在这种情况下， 将不会执行逻辑与后面的运算了，即发生了短路。")]),t._v(" "),a("p",[t._v("2） 逻辑或： 如果第一个操作数为 true，那么结果肯定就是 true ，所在在这种情况下， 将不会执行逻辑或后面的运算了，即发生了短路。")])]),t._v(" "),a("li",[a("p",[t._v("关于变量的自增与自减运算。")]),t._v(" "),a("p",[t._v("1） 关于 int b = a++，作用是将 a 的值先赋给 b，然后再让 a  自增 1.")]),t._v(" "),a("p",[t._v("2） 关于 int b = ++a，作用是将 a 的值先自增 1，然后将自增后的结果赋给 b。")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);